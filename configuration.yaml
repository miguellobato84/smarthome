
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

homeassistant: 
  external_url: !secret public_endpoint
  internal_url: http://192.168.0.26:8123

http:
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  ip_ban_enabled: true
  login_attempts_threshold: 5
  
# Text to speech
tts:
  - platform: google_translate

# https://www.home-assistant.io/integrations/google_assistant/
google_assistant:
 project_id: hassio-22216
 service_account: !include SERVICE_ACCOUNT.json
 report_state: true
 expose_by_default: true
 exposed_domains:
    - scene
    - light
    - script
    - sensor
    - climate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

climate:
  - platform: generic_thermostat
    unique_id: climate.calefaccion
    name: calefaccion
    heater: switch.termostato
    target_sensor: sensor.ble_temperature_termometro_salon_1a_de
    min_temp: 15
    max_temp: 23
    ac_mode: false
    target_temp: 21
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 5
    keep_alive:
      minutes: 3
    initial_hvac_mode: "off"
    away_temp: 16
    precision: 0.1

sensor:
  - platform: systemmonitor
    resources:
      - type: last_boot
      
  - platform: time_date
    display_options:
      - 'time'

  - platform: template
    sensors:
      minutes_next_sunrise:
        friendly_name: "Minutes until Next Sunrise"
        unit_of_measurement: 'm'
        entity_id: sensor.time
        value_template: "{{((state_attr('sun.sun', 'next_rising')|as_timestamp|int - now()|as_timestamp|int)/60)|int}}"
      is_morning:
        friendly_name: "Is Morning"
        entity_id: sensor.time
        value_template: "{{ 'on' if 6 <= now()|as_timestamp|timestamp_custom('%H')|int <= 10 else 'off'  }}"
      is_pre_weekday:
        friendly_name: "Is the day before of Weekday"
        entity_id: sensor.time
        value_template: "{{ 'on' if 0 <= now()|as_timestamp|timestamp_custom('%w')|int < 5 else 'off'  }}"
      is_weekday:
        friendly_name: "Is Weekday"
        entity_id: sensor.time
        value_template: "{{ 'on' if 0 < now()|as_timestamp|timestamp_custom('%w')|int < 6 else 'off'  }}"
      extractor_uptime:
        friendly_name: "Extractor running time"
        entity_id: sensor.time
        value_template: "{{ -1 if is_state('light.extractor_on_off', 'off') else (now()|as_timestamp|int - states.light.extractor_on_off.last_changed|as_timestamp|int)/60 }}"
